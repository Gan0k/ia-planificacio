(define (problem test2)
    (:requirements :strips :fluents)
    (:domain travel-strips)
    (:objects c1 c2 c3 c4 c5 c6 c7 c8 c9 c10  - city
              h1 h2 h3 h4 h5 h6 h7 h8 h9 h10  - hotel)
    (:init  (connected c1 c4) (connected c1 c6) (connected c2 c3) 
            (connected c2 c4) (connected c2 c9) (connected c3 c1) 
            (connected c3 c5) (connected c3 c6) (connected c3 c8) 
            (connected c5 c1) (connected c5 c6) (connected c6 c8) 
            (connected c6 c9) (connected c8 c7) (connected c8 c9) 
            (connected c8 c10) (connected c9 c4) (connected c10 c4) 
            (connected c10 c7) (hotel-in h1 c1) (hotel-in h2 c2) (hotel-in h3 c3) 
            (hotel-in h4 c4) (hotel-in h5 c5) (hotel-in h6 c6) 
            (hotel-in h7 c7) (hotel-in h8 c8) (hotel-in h9 c9) 
            (hotel-in h10 c10) (not-visited c1) (not-visited c2) (not-visited c3) 
            (not-visited c4) (not-visited c5) (not-visited c6) 
            (not-visited c7) (not-visited c8) (not-visited c9) 
            (not-visited c10) (= (price c1 c4) 84) (= (price c1 c6) 45) (= (price c2 c3) 60) 
            (= (price c2 c4) 53) (= (price c2 c9) 70) (= (price c3 c1) 7) 
            (= (price c3 c5) 39) (= (price c3 c6) 83) (= (price c3 c8) 27) 
            (= (price c5 c1) 97) (= (price c5 c6) 99) (= (price c6 c8) 82) 
            (= (price c6 c9) 59) (= (price c8 c7) 61) (= (price c8 c9) 74) 
            (= (price c8 c10) 11) (= (price c9 c4) 33) (= (price c10 c4) 41) 
            (= (price c10 c7) 69) (= (price-hotel h1 c1) 68) (= (price-hotel h2 c2) 96) (= (price-hotel h3 c3) 67) 
            (= (price-hotel h4 c4) 20) (= (price-hotel h5 c5) 18) (= (price-hotel h6 c6) 25) 
            (= (price-hotel h7 c7) 41) (= (price-hotel h8 c8) 43) (= (price-hotel h9 c9) 15) 
            (= (price-hotel h10 c10) 67) (not-started) (= (min-days) 1) (= (max-days) 1) (= (spent-days) 0) (= (min-days-viatge) 5) (= (cost-travel) 0)(= (min-cost-travel) 100) (= (max-cost-travel) 10000 )
    )
    (:goal (and (>= (cost-travel) (min-cost-travel)) (<= (min-days-viatge) 0)))
    (:metric minimize (cost-travel))
)
