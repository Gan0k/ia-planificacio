(define (problem test8)
    (:requirements :strips :fluents)
    (:domain travel-strips)
    (:objects c1 c2 c3 c4 c5 c6 c7 c8  - city
              h1 h2 h3 h4 h5 h6 h7 h8  - hotel)
    (:init  (connected c1 c4) (connected c1 c7) (connected c2 c1) 
            (connected c2 c3) (connected c2 c4) (connected c2 c5) 
            (connected c2 c6) (connected c2 c7) (connected c2 c8) 
            (connected c3 c1) (connected c3 c6) (connected c4 c3) 
            (connected c4 c5) (connected c4 c8) (connected c5 c1) 
            (connected c5 c3) (connected c5 c7) (connected c6 c1) 
            (connected c6 c4) (connected c6 c5) (connected c6 c7) 
            (connected c7 c4) (connected c7 c8) (connected c8 c1) 
            (connected c8 c3) (connected c8 c5) (connected c8 c6) 
            (hotel-in h1 c1) (hotel-in h2 c2) (hotel-in h3 c3) 
            (hotel-in h4 c4) (hotel-in h5 c5) (hotel-in h6 c6) 
            (hotel-in h7 c7) (hotel-in h8 c8) (not-visited c1) (not-visited c2) (not-visited c3) 
            (not-visited c4) (not-visited c5) (not-visited c6) 
            (not-visited c7) (not-visited c8) (= (price c1 c4) 100) (= (price c1 c7) 56) (= (price c2 c1) 23) 
            (= (price c2 c3) 94) (= (price c2 c4) 23) (= (price c2 c5) 61) 
            (= (price c2 c6) 10) (= (price c2 c7) 9) (= (price c2 c8) 52) 
            (= (price c3 c1) 79) (= (price c3 c6) 79) (= (price c4 c3) 50) 
            (= (price c4 c5) 100) (= (price c4 c8) 44) (= (price c5 c1) 33) 
            (= (price c5 c3) 80) (= (price c5 c7) 65) (= (price c6 c1) 55) 
            (= (price c6 c4) 82) (= (price c6 c5) 79) (= (price c6 c7) 48) 
            (= (price c7 c4) 71) (= (price c7 c8) 26) (= (price c8 c1) 81) 
            (= (price c8 c3) 23) (= (price c8 c5) 2) (= (price c8 c6) 50) 
            (= (price-hotel h1 c1) 65) (= (price-hotel h2 c2) 65) (= (price-hotel h3 c3) 30) 
            (= (price-hotel h4 c4) 65) (= (price-hotel h5 c5) 64) (= (price-hotel h6 c6) 85) 
            (= (price-hotel h7 c7) 87) (= (price-hotel h8 c8) 10) (not-started) (= (min-days) 1) (= (max-days) 1) (= (spent-days) 0) (= (min-days-viatge) 8) (= (cost-travel) 0)(= (min-cost-travel) 100) (= (max-cost-travel) 10000 )
    )
    (:goal (and (>= (cost-travel) (min-cost-travel)) (<= (min-days-viatge) 0)))
    (:metric minimize (cost-travel))
)
